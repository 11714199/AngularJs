{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../forget-password/forget-password.component\";\nimport * as i6 from \"../welcome/welcome.component\";\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-forget-password\", 9);\n    i0.ɵɵtext(2, \" Hii \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"email\", ctx_r1.data.email);\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-welcome\");\n    i0.ɵɵelementEnd();\n  }\n}\n//import { CookieService } from 'ngx-cookie-service';\nexport class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.forgetPas = false;\n    this.welcomePage = false;\n    this.data = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n  ngAfterViewChecked() {\n    console.log(\"ngAfterViewChecked Login\");\n  }\n  ngAfterViewInit() {\n    console.log(\"ngAfterViewInit Login\");\n  }\n  ngAfterContentChecked() {\n    console.log(\"ngAfterContentChecked Login\");\n  }\n  ngAfterContentInit() {\n    console.log(\"ngAfterContentInit Login\");\n  }\n  ngDoCheck() {\n    console.log(\"ngDoCheck Login\");\n  }\n  ngOnDestroy() {\n    console.log(\"ngOnDestroy Login\");\n  }\n  ngOnInit() {\n    console.log(\"ngOnInit Login\");\n  }\n  ngOnChanges() {\n    console.log(\"ngOnChanges Login\");\n  }\n  login(loginForm) {\n    this.loginService.login(this.data).subscribe(response => {\n      let res = response;\n      if (res.data.statusCode == 200 && res.data.status == true) {\n        this.welcomePage = !this.welcomePage;\n        this.router.navigate(['/welcome']);\n        localStorage.setItem(\"employee_id\", res.data.id);\n        localStorage.setItem(\"token\", res.data.token);\n        //this.cookieService.set('token', res.data.token)\n      } else {\n        loginForm.reset();\n      }\n    });\n  }\n  forgetPassword() {\n    this.forgetPas = !this.forgetPas;\n    this.router.navigate(['/forgetPassword']);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 15,\n  vars: 5,\n  consts: [[1, \"loginContainer\"], [1, \"form\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"title\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"minlength\", \"8\", \"maxlength\", \"15\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"submitButton\", 3, \"disabled\"], [\"href\", \"forgetPassword\", 3, \"click\"], [4, \"ngIf\"], [3, \"email\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.login(_r0));\n      });\n      i0.ɵɵelementStart(3, \"h4\", 3);\n      i0.ɵɵtext(4, \"Sign In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.data.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\")(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.data.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \" Submit \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_11_listener() {\n        return ctx.forgetPassword();\n      });\n      i0.ɵɵtext(12, \"Forget Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 1, \"div\", 8);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgetPas);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.welcomePage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.MaxLengthValidator, i4.NgModel, i4.NgForm, i5.ForgetPasswordComponent, i6.WelcomeComponent],\n  styles: [\".loginContainer[_ngcontent-%COMP%]{\\n    height: 100vh;\\n}\\n\\n.form[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100%;\\n    width: 100%;\\n    gap: 15px;\\n    \\n    position: relative;\\n    \\n}\\n.title[_ngcontent-%COMP%] {\\n    \\n}\\n.form-control[_ngcontent-%COMP%] {\\n    position: relative;\\n    border-color: antiquewhite;\\n}\\n.submitButton[_ngcontent-%COMP%] {\\n    width: 12%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7SUFDWCxTQUFTO0lBQ1QsNkJBQTZCO0lBQzdCLGtCQUFrQjs7QUFFdEI7QUFDQTtJQUNJOztnQkFFWTtBQUNoQjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLDBCQUEwQjtBQUM5QjtBQUNBO0lBQ0ksVUFBVTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luQ29udGFpbmVye1xuICAgIGhlaWdodDogMTAwdmg7XG59XG5cbi5mb3JtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZ2FwOiAxNXB4O1xuICAgIC8qIGp1c3RpZnktY29udGVudDogY2VudGVyOyAqL1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBcbn1cbi50aXRsZSB7XG4gICAgLyogcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLTIwcHg7XG4gICAgbGVmdDogNTAlOyAqL1xufVxuLmZvcm0tY29udHJvbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1jb2xvcjogYW50aXF1ZXdoaXRlO1xufVxuLnN1Ym1pdEJ1dHRvbiB7XG4gICAgd2lkdGg6IDEyJTtcbn0gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","LoginComponent","constructor","loginService","router","email","password","ngAfterViewChecked","console","log","ngAfterViewInit","ngAfterContentChecked","ngAfterContentInit","ngDoCheck","ngOnDestroy","ngOnInit","ngOnChanges","login","loginForm","data","subscribe","response","res","statusCode","status","welcomePage","navigate","localStorage","setItem","id","token","reset","forgetPassword","forgetPas","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/teamlease/Desktop/FRONTEND_PROJECT/AngularJs/src/app/login/login.component.html","/home/teamlease/Desktop/FRONTEND_PROJECT/AngularJs/src/app/login/login.component.ts"],"sourcesContent":["\n<div class=\"loginContainer\">\n    <form class=\"form\" #loginForm = \"ngForm\" (ngSubmit)=\"login(loginForm)\" >\n        <h4 class=\"title\">Sign In</h4>\n        <div>\n            <input class=\"form-control\" type=\"email\" placeholder=\"Email\" name=\"email\" ngModel [(ngModel)]=\"data.email\" required>\n        </div>\n        <div>\n            <input class=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" minlength=\"8\" maxlength=\"15\" ngModel [(ngModel)]=\"data.password\" required>\n        </div>\n        <button class=\"submitButton\" [disabled]=\"loginForm.invalid\" type=\"submit\">\n            Submit\n        </button>\n        <a href=\"forgetPassword\" (click)=\"forgetPassword()\">Forget Password</a>\n        <div *ngIf=\"forgetPas\">  \n            <app-forget-password [email]=\"data.email\"> Hii </app-forget-password>\n        </div>\n        <div *ngIf=\"welcomePage\">\n            <app-welcome></app-welcome>\n        </div>\n    </form>\n</div>","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, DoCheck, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Login } from '../login';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\n//import { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnChanges, OnDestroy, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked {\n\n  forgetPas: any = false;\n  welcomePage: any = false;\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    /*private cookieService: CookieService*/) {}\n  ngAfterViewChecked(): void {\n    console.log(\"ngAfterViewChecked Login\")\n  }\n  ngAfterViewInit(): void {\n    console.log(\"ngAfterViewInit Login\")\n  }\n  ngAfterContentChecked(): void {\n    console.log(\"ngAfterContentChecked Login\")\n  }\n  ngAfterContentInit(): void {\n    console.log(\"ngAfterContentInit Login\")\n  }\n  ngDoCheck(): void {\n    console.log(\"ngDoCheck Login\")\n  }\n\n  ngOnDestroy(): void {\n    console.log(\"ngOnDestroy Login\")\n  }\n\n  ngOnInit(): void {\n    console.log(\"ngOnInit Login\")    \n  }\n\n  ngOnChanges(): void {\n    console.log(\"ngOnChanges Login\")\n  }\n  login(loginForm: NgForm) {\n    this.loginService.login(this.data).subscribe(response => {\n      let res : any= response\n      if(res.data.statusCode == 200 && res.data.status == true) {\n        this.welcomePage = !this.welcomePage;\n        this.router.navigate(['/welcome'])\n        localStorage.setItem(\"employee_id\",res.data.id)\n        localStorage.setItem(\"token\", res.data.token)\n        //this.cookieService.set('token', res.data.token)\n      } else {\n        loginForm.reset();\n      }\n    })\n  }\n\n  forgetPassword() {\n    this.forgetPas = !this.forgetPas\n    this.router.navigate(['/forgetPassword'])\n  }\n\n  data: Login = {\n    email : \"\",\n    password : \"\"\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}