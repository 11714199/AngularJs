{"ast":null,"code":"export class TokenInterceptor {\n  intercept(req, next) {\n    const token = localStorage.getItem('token');\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next.handle(authRequest);\n  }\n}","map":{"version":3,"mappings":"AAIA,OAAM,MAAOA,gBAAgB;EACzBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;MAC1BC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUN,KAAK,EAAE;KAC9D,CAAC;IAEF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,WAAW,CAAC;EACnC","names":["TokenInterceptor","intercept","req","next","token","localStorage","getItem","authRequest","clone","headers","set","handle"],"sourceRoot":"","sources":["/home/teamlease/Desktop/FRONTEND_PROJECT/AngularJs/src/app/token.interceptor.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nexport class TokenInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const token = localStorage.getItem('token')\n        const authRequest = req.clone({\n            headers: req.headers.set('Authorization', `Bearer ${token}`)\n        });\n        \n        return next.handle(authRequest);\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}